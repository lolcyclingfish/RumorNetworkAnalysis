setwd("~/Documents/MSIA-Data-Viz/Data")
rm(list=ls())
bezier.curve <- function(p1, p2, p3, id, size) {
n <- seq(0,1,length.out=50)
bx <- (1-n)^2 * p1[[1]] +
(1-n) * n * 2 * p3[[1]] +
n^2 * p2[[1]]
by <- (1-n)^2 * p1[[2]] +
(1-n) * n * 2 * p3[[2]] +
n^2 * p2[[2]]
data.frame(path_id=id, size=size, lon=bx, lat=by)
}
bezier.arc <- function(p1, p2, id, size) {
intercept.long<-(p1[[1]] + p2[[1]]) / 2
intercept.lat <-(p1[[2]] + p2[[2]]) / 2 + 0.01
p3 <- c(intercept.long, intercept.lat)
bezier.curve(p1, p2, p3, id, size)
}
data = read.csv('unique_paths.csv')
for (i in seq(nrow(data[]))){
print(i)
d <- bezier.arc(c(data['From_lon'][i,], data['From_lat'][i,]),
c(data['To_lon'][i,], data['To_lat'][i,]),
data['path_id'][i,],data['Unnamed..0'][i,])
if (i==1){
DF=d
}
else {
DF = rbind(DF,d)
}
}
write.csv(DF,'FINAL_bezier_curves.csv')
##Local
#LY
rm(list=ls())
library(magrittr)
library(httr)
library(data.table)
library(igraph)
detach(package:sna)
######################
#load data and create network
######################
pol = read.csv('data/pol_agg.csv',stringsAsFactors = FALSE)
pol = pol[pol$Source!=pol$website,] #Remove self-loop
#fake news
#g_valued <- graph_from_data_frame(d = network_table[,1:3,with=FALSE],directed = FALSE,vertices = total_table)
pol_fake = pol[,c(1,2,5)]
pol_fake = pol_fake[pol_fake$FALSE.>0,]
g_fake_valued = graph_from_data_frame(d = pol_fake,directed = T)
am_fake_valued = as_adjacency_matrix(g_fake_valued)
#real news
pol_true = pol[,c(1,2,4)]
pol_true = pol_true[pol_true$TRUE.>0,]
g_real_valued = graph_from_data_frame(d = pol_true,directed = T)
am_real_valued = as_adjacency_matrix(g_real_valued)
centr_degree(g_fake_valued,mode='all',loops = FALSE,normalized = TRUE)
centr_degree(g_real_valued,mode='all',loops = FALSE,normalized = TRUE)
####################################
ob<-g_real_valued
E(ob)$width =  5*(pol_true$TRUE.+1/max(pol_true$TRUE.))
wd<-graph.strength(ob,weights = E(ob)$width*0.8)
wb<-betweenness(ob,directed = TRUE, weights = E(ob)$width*0.8,normalized = TRUE)
wc<-closeness(ob,mode = "all",
weights = E(ob)$width*0.8,normalized = TRUE)
we<-evcent(ob,directed = FALSE,
weights = E(ob)$width*0.8)
for (i in c('wd','wb','wc','wd')){
v<-get(i)
print(i)
print(sort(v,decreasing=TRUE)[1:5])
print('------')
}
setwd("~/Documents/RumorNetworkAnalysis")
##Local
#LY
rm(list=ls())
library(magrittr)
library(httr)
library(data.table)
library(igraph)
detach(package:sna)
######################
#load data and create network
######################
setwd("~/Documents/RumorNetworkAnalysis")
pol = read.csv('data/pol_agg.csv',stringsAsFactors = FALSE)
pol = pol[pol$Source!=pol$website,] #Remove self-loop
#fake news
#g_valued <- graph_from_data_frame(d = network_table[,1:3,with=FALSE],directed = FALSE,vertices = total_table)
pol_fake = pol[,c(1,2,5)]
pol_fake = pol_fake[pol_fake$FALSE.>0,]
g_fake_valued = graph_from_data_frame(d = pol_fake,directed = T)
am_fake_valued = as_adjacency_matrix(g_fake_valued)
#real news
pol_true = pol[,c(1,2,4)]
pol_true = pol_true[pol_true$TRUE.>0,]
g_real_valued = graph_from_data_frame(d = pol_true,directed = T)
am_real_valued = as_adjacency_matrix(g_real_valued)
centr_degree(g_fake_valued,mode='all',loops = FALSE,normalized = TRUE)
centr_degree(g_real_valued,mode='all',loops = FALSE,normalized = TRUE)
ob<-g_real_valued
E(ob)$width =  5*(pol_true$TRUE.+1/max(pol_true$TRUE.))
wd<-graph.strength(ob,weights = E(ob)$width*0.8)
wb<-betweenness(ob,directed = TRUE, weights = E(ob)$width*0.8,normalized = TRUE)
wc<-closeness(ob,mode = "all",
weights = E(ob)$width*0.8,normalized = TRUE)
we<-evcent(ob,directed = FALSE,
weights = E(ob)$width*0.8)
for (i in c('wd','wb','wc','wd')){
v<-get(i)
print(i)
print(sort(v,decreasing=TRUE)[1:5])
print('------')
}
v
str(v)
real<-as.data.frame(v)
View(real)
wd
real<-data.frame()
real<-data.frame()
for (i in c('wd','wb','wc','wd')){
v<-get(i)
real<-cbind(v,v)
}
View(real)
real<-data.frame()
for (i in c('wd','wb','wc','wd')){
v<-get(i)
real<-cbind(real,v)
}
ob<-g_real_valued
E(ob)$width =  5*(pol_true$TRUE.+1/max(pol_true$TRUE.))
wd<-graph.strength(ob,weights = E(ob)$width*0.8)
wb<-betweenness(ob,directed = TRUE, weights = E(ob)$width*0.8,normalized = TRUE)
wc<-closeness(ob,mode = "all",
weights = E(ob)$width*0.8,normalized = TRUE)
we<-evcent(ob,directed = FALSE,
weights = E(ob)$width*0.8)
real<-data.frame()
for (i in c('wd','wb','wc','wd')){
v<-as.data.frame(get(i))
real<-cbind(real,v)
}
real<-data.frame()
for (i in c('wd','wb','wc','wd')){
v<-as.data.frame(get(i))
real<-cbind(real,v)
}
real<-data.frame(wd)
for (i in c('wb','wc','wd')){
v<-as.data.frame(get(i))
real<-cbind(real,v)
}
View(real)
write.csv(real,'real_localcentralities.csv')
ob<-g_fake_valued
E(ob)$width =  5*(pol_fake$TRUE.+1/max(pol_fake$TRUE.))
wd<-graph.strength(ob,weights = E(ob)$width*0.8)
wb<-betweenness(ob,directed = TRUE, weights = E(ob)$width*0.8,normalized = TRUE)
wc<-closeness(ob,mode = "all",
weights = E(ob)$width*0.8,normalized = TRUE)
we<-evcent(ob,directed = FALSE,
weights = E(ob)$width*0.8)
fake<-data.frame(wd)
for (i in c('wb','wc','wd')){
v<-as.data.frame(get(i))
fake<-cbind(fake,v)
}
write.csv(fake,'fake_localcentralities.csv')
